{"version":3,"sources":["features/board/boardSlice.js","features/score/Score.js","features/board/cardRow/card/Card.js","features/board/cardRow/CardRow.js","features/board/Board.js","App.js","reportWebVitals.js","app/store.js","index.js"],"names":["initialState","id","contents","visible","matched","wordPairs","setBoard","type","payload","words","newWordPairs","reps","length","i","wordIndex","Math","floor","random","push","splice","randomWords","selectBoard","state","board","map","card","selectVisibleIDs","filter","selectMatchedIDs","Score","cardsMatched","useSelector","className","Card","dispatch","useDispatch","visibleIDs","matchedIDs","flipHandler","flipCard","cardStyle","click","cardText","src","alt","includes","onClick","CardRow","content","cards","Board","currentBoard","numberOfCards","rows","getRowCards","row","rowCards","j","cardIndex","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","action","setState","forEach","element","index","flipState","cardID","index1","index2","undefined","card1","card2","store","createStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.48a51208.chunk.js","sourcesContent":["const initialState = [\r\n  {id: 0, contents: 'Provider', visible: true, matched: true}, \r\n  {id: 1, contents: 'Provider', visible: true, matched: true}, \r\n  {id: 2, contents: 'selector', visible: true, matched: true}, \r\n  {id: 3, contents: 'selector', visible: true, matched: true}, \r\n  {id: 4, contents: 'useSelector()', visible: true, matched: true}, \r\n  {id: 5, contents: 'useSelector()', visible: true, matched: true}, \r\n  {id: 6, contents: 'useDispatch()', visible: true, matched: true}, \r\n  {id: 7, contents: 'useDispatch()', visible: true, matched: true}, \r\n  {id: 8, contents: 'Pure Function', visible: true, matched: true}, \r\n  {id: 9, contents: 'Pure Function', visible: true, matched: true}, \r\n  {id: 10, contents: 'react-redux', visible: true, matched: true}, \r\n  {id: 11, contents: 'react-redux', visible: true, matched: true}, \r\n];\r\n\r\nexport const boardReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case 'board/setBoard':\r\n      let setState = [];\r\n      action.payload.forEach((element, index) => \r\n        setState.push({id: index, \r\n                      contents: element, \r\n                      visible: false, \r\n                      matched: false})\r\n      );\r\n      return setState;\r\n    case 'board/flipCard':\r\n      let flipState = [...state];\r\n      const cardID = action.payload;\r\n      flipState[cardID] = {...state[cardID], visible:true}\r\n      \r\n      const [index1, index2] = flipState\r\n        .filter(card => card.visible)\r\n        .map(card => card.id);\r\n      if (index2 !== undefined){\r\n        const card1 = flipState[index1];\r\n        const card2 = flipState[index2];\r\n        if (card1.contents === card2.contents) {\r\n          flipState[index1] = {...card1, visible: false, matched: true}\r\n          flipState[index2] = {...card2, visible: false, matched: true}\r\n        }\r\n      } \r\n\r\n      return flipState;\r\n    case 'board/resetCards':\r\n      return state.map(card => ({...card, visible: false}));\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nconst wordPairs = [\r\n  'Provider', 'Provider', \r\n  'selector', 'selector', \r\n  'useSelector()', 'useSelector()', \r\n  'useDispatch()', 'useDispatch()',\r\n  'Pure Function', 'Pure Function',\r\n  'react-redux', 'react-redux',\r\n]\r\n\r\nconst randomWords = () => {\r\n  let words = []\r\n  let newWordPairs = [...wordPairs]\r\n  const reps = newWordPairs.length\r\n  for (let i=0; i<reps; i++) {\r\n    const wordIndex = Math.floor(Math.random()*newWordPairs.length);\r\n    words.push(newWordPairs[wordIndex])\r\n    newWordPairs.splice(wordIndex, 1)\r\n  }\r\n\r\n  return words;\r\n} \r\n\r\n// action creators\r\nexport const setBoard = () => {\r\n  const words = randomWords()\r\n  return {\r\n    type: 'board/setBoard',\r\n    payload: words\r\n  }\r\n}\r\n\r\nexport const flipCard = (id) => {\r\n  return {\r\n    type: 'board/flipCard',\r\n    payload: id\r\n  }\r\n}\r\n\r\nexport const resetCards = (indices) => {\r\n  return {\r\n    type: 'board/resetCards'\r\n  }\r\n}\r\n\r\nexport const selectBoard = state => state.board.map(card => {\r\n  return {\r\n    id: card.id,\r\n    contents: card.contents\r\n  } \r\n})\r\n\r\nexport const selectVisibleIDs = state => state.board\r\n  .filter(card => card.visible)\r\n  .map(card => card.id)\r\n\r\nexport const selectMatchedIDs = state => state.board\r\n  .filter(card => card.matched)\r\n  .map(card => card.id)\r\n","import React from 'react';\r\n// Add import statement below\r\nimport { useSelector } from 'react-redux';\r\nimport { selectMatchedIDs } from '../board/boardSlice';\r\n\r\n\r\nexport const Score = () => {\r\n  // Add selected data variable below\r\n  const cardsMatched = useSelector(selectMatchedIDs)\r\n  \r\n\r\n  return (\r\n    // implement selected data inside <div>\r\n    <div className=\"score-container\">Matched: {cardsMatched.length}</div>\r\n  );\r\n};","import React from 'react';\r\n// Add import statements below\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport {  selectVisibleIDs,\r\n          flipCard,\r\n          selectMatchedIDs,\r\n          resetCards\r\n        } from '../../boardSlice';\r\n\r\n\r\nlet cardLogo = \"https://static-assets.codecademy.com/Courses/Learn-Redux/matching-game/codecademy_logo.png\";\r\n\r\nexport const Card = ({ id, contents }) => {\r\n  const dispatch = useDispatch();\r\n  // Add selected data and dispatch variables below\r\n  const visibleIDs = useSelector(selectVisibleIDs);\r\n  const matchedIDs = useSelector(selectMatchedIDs);\r\n  \r\n  // flip card action\r\n  const flipHandler = (id) => {\r\n    dispatch(flipCard(id))\r\n  };\r\n\r\n  const autoFlipHandler = (id) => {\r\n    dispatch(resetCards())\r\n  }\r\n\r\n  let cardStyle = 'resting'\r\n  let click = () => flipHandler(id);\r\n  \r\n  let cardText = (\r\n    <img src={cardLogo} className=\"logo-placeholder\" alt=\"Card option\" />\r\n  );\r\n\r\n  // 1st if statement\r\n  // implement card id array membership check\r\n  if (visibleIDs.includes(id) || matchedIDs.includes(id)) {\r\n    cardText = contents;\r\n    click = () => {};\r\n  }\r\n\r\n  // 2nd if statement\r\n  // implement card id array membership check\r\n  if (matchedIDs.includes(id)) {\r\n    cardStyle = 'matched';\r\n  }\r\n\r\n  // 3rd if statement\r\n  // implement number of flipped cards check\r\n  if (visibleIDs.length===2) {\r\n    click = () => {\r\n      autoFlipHandler();\r\n      flipHandler(id);\r\n    };\r\n  }\r\n\r\n  if (visibleIDs.length>=2 && !matchedIDs.includes(id)){\r\n    cardStyle = 'no-match'\r\n  }\r\n\r\n  return (\r\n    <button onClick={click} className={`card ${cardStyle}`}>\r\n      {cardText}\r\n    </button>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { Card } from './card/Card.js';\r\n\r\nexport const CardRow = ({ cards }) => {\r\n  const content = cards.map(card => \r\n    <Card \r\n      key={card.id} \r\n      id={card.id} \r\n      contents={card.contents} \r\n  />)\r\n\r\n  return <>{content}</>;\r\n};\r\n","import React from 'react';\r\nimport { CardRow } from './cardRow/CardRow';\r\n// Add import statements below\r\nimport { useSelector } from 'react-redux';\r\nimport { selectBoard } from './boardSlice'\r\n\r\n\r\nexport const Board = () => {\r\n  // Add selected data variable and implement below\r\n  const currentBoard = useSelector(selectBoard)\r\n\r\n  const numberOfCards = currentBoard.length;\r\n  const columns = 3;\r\n  const rows = Math.floor(numberOfCards / columns);\r\n\r\n  const getRowCards = (row) => {\r\n    const rowCards = [];\r\n    for (let j = 0; j < columns; j++) {\r\n      const cardIndex = row * columns + j;\r\n      // Implement selected data below\r\n      rowCards.push(currentBoard[cardIndex]);\r\n    }\r\n    return rowCards;\r\n  };\r\n\r\n  let content = [];\r\n  for (let row = 0; row < rows; row++) {\r\n    const rowCards = getRowCards(row);\r\n    content.push(\r\n      <CardRow \r\n        key={row} \r\n        cards={rowCards} \r\n      />\r\n    );\r\n  }\r\n  return <div className=\"cards-container\">{content}</div>;\r\n};\r\n","import './App.css';\r\nimport React from 'react';\r\nimport { Score } from './features/score/Score.js';\r\nimport { Board } from './features/board/Board.js';\r\n// Add import statements below\r\nimport { useDispatch } from 'react-redux';\r\nimport { setBoard, resetCards } from './features/board/boardSlice';\r\n\r\n\r\n\r\nconst App = () => {\r\n  // Add dispatch variable below\r\n  const dispatch = useDispatch();\r\n\r\n  const startGameHandler = () => {\r\n    // Add action dispatch below\r\n    dispatch(setBoard())\r\n  };\r\n\r\n  const tryAgainHandler = () => {\r\n    // Add action dispatch below\r\n    dispatch(resetCards())\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Score />\r\n      <Board />\r\n      <footer className=\"footer\">\r\n        <button onClick={startGameHandler} className=\"start-button\">\r\n          Start Game\r\n        </button>\r\n        <button onClick={tryAgainHandler} className=\"try-new-pair-button\">\r\n          Try New Pair\r\n        </button>\r\n      </footer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { combineReducers, createStore } from 'redux';\r\n\r\nimport { boardReducer } from '../features/board/boardSlice.js';\r\n\r\nconst rootReducer = combineReducers({\r\n  board: boardReducer,\r\n});\r\n\r\nexport const store = createStore(rootReducer);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport { store } from './app/store.js';\n// Add import statement below\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n  <React.StrictMode>\n  <Provider store={store}>\n    <App />\n  </Provider>\n  </React.StrictMode>,\n  document.getElementById('app')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}